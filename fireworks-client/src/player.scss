
.title {
    display: flex;
    align-items: center;
}

.arrow-down {
    width: 0; 
    height: 0; 
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    
    border-top: 5px solid #fff;
}

.show-menu-button {
    @include transition(all .3s ease);
    padding: 10px;
    cursor: pointer;
}

.show-menu-button:hover {
    background-color: $color-theme-light;
}

.gone {
    display: none !important;
}

.player-container-open {
    background-color: $color-theme-dark-light;
    @include box-shadow(0px, 5px, 16px, rgba(0,0,0,0.5));
    position: relative;
    padding: 0 24px 5vh 24px;
}

.invisible {
    opacity: 0;
    z-index: -1;
}

.player-container {
    display: flex;
    flex-direction: column;
    position: relative;
    @include transition(all .3s ease);

    @include keyframes(anim-draw) {
        0% {  
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }

    .menu {
        background-color: $color-theme-second;
        display: flex;
        flex-direction: column;
        @include box-shadow(0px, 5px, 16px, rgba(0,0,0,0.5));
        position: absolute;
        @include transition(all .3s ease);
        border-radius: 3px;

        .menu-option {
            padding: 14px;
            text-decoration: none;
            color: $theme-font-color;
            @include transition(all .3s ease);
        }

        .menu-option:hover {
            background-color: lighten($color-theme-second, 10%);
        }
    }

    .card-draw {
        @include animation(anim-draw 0.3s ease);
    }

    .turn-indicator {
        color: #cfd100;
    }

    h1 {
        font-weight: 300;
        font-size: large;
        @include transition(all .3s ease);
    }

    .special {
        position: absolute;
        top: 0px;
        left: 0px;
    }

    .container-open {
        @include transform(translateY(2vh));
    }

    .slideable-container {
        display: flex;
        flex-direction: column;
        @include transition(all .3s ease);
    }

    .option-container {
        display: flex;
        flex-direction: row;
        margin-top: 16px;

        a {
            padding: 0.7vw 2vw 0.7vw 2vw;
            min-width: 4vw;
            text-align: center;
            @include transition(all .3s ease);
            display: block;
            background-color: $color-theme-dark;
            text-decoration: none;
            color: $theme-font-color;

            &.selected {
                background-color: $color-theme-light;
            }

            &:hover {
                background-color: $color-theme-light;
            }
        }

        .horizontal-spacer {
            flex: 1 auto;
        }
    }

    .centering-container {
        flex: 1 auto;
        @include transition(all .3s ease);
        display: flex;
        justify-content: center;
    }

    .card-container {
        margin-left: 7vw;
        flex: 0 auto;
        @include transition(all .3s ease);

        span {
            display: inline-block;
        }

        .shift {
            @include transform(translateX(-3vw));
        }

        img {
            cursor: pointer;
            width: 10vw;
            position: relative;

            @include radius(0.8vw);
            @include box-shadow(0px, 5px, 16px, rgba(0,0,0,0.5));
            @include transition(all .3s ease);
        }

        .hover-card {
            @include transform(translateY(-1vh));
        }

        .active-card {
            @include transform(translateY(-3vh));
        }

        .gsap-container {
            display: inline-block;
            -webkit-transform: translate3d(0,0,0);
        }

        .card-in-hand {
            @include transition(all 0.3s ease);
            margin-left: -7vw;
            position: relative;

            .hint-decor {
                position: absolute;
                color: #fff;
                background-color: $color-theme-second;
                padding-left: 1vw;
                padding-right: 1vw;
                padding-top: 1.3vw;
                padding-bottom: 0.3vw;
                bottom: -1.4vw;
                margin-left: 0.5vw;

                border-radius: 0.5vw;
                @include box-shadow(0px, 5px, 16px, rgba(0,0,0,0.5));
            }

            .no-number {
                color: rgba(0, 0, 0, 0);
            }

            .black-text {
                color: #000;
            }

            .card-blue {
                background-color: $card-blue;
            }
            .card-green {
                background-color: $card-green;
            }
            .card-red {
                background-color: $card-red;
            }
            .card-white {
                background-color: $card-white;
            }
            .card-yellow {
                background-color: $card-yellow;
            }
        }
    }

    .no-sign {
        background-image: url('res/ic_no_sign.svg');
        background-size: cover;
        /* height: 100%; */
        height: 20vw;
        width: 20vw;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-left: -10vw;
        margin-top: -10vw;

        z-index: 1;
    }

    .delete {
        background-image: url('res/ic_delete_black.svg');
        background-size: cover;
        /* height: 100%; */
        height: 14vw;
        width: 14vw;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-left: -7vw;
        margin-top: -7vw;

        z-index: 1;
    }

    .invisible {
        visibility: hidden;
    }
}

.hint-view-transition-enter {
    @include transform(translateY(-2vw));
}

.hint-view-transition-enter.hint-view-transition-enter-active {
    @include transform(none);
    @include transition(all .3s ease);
}

.hint-view-transition-leave {
    @include transform(none);
}

.hint-view-transition-leave.hint-view-transition-leave-active {
    @include transform(translateY(-2vw));
    @include transition(all .3s ease);
}








$pyramid-size: 0.07vw;
$pyramid-color: #daae5b;//lighten($card-yellow, 10%);

@include keyframes(spin) {
  from { @include transform(rotateY(0deg));}
    to { @include transform(rotateY(360deg));}
}

@include keyframes(bobble) {
  from { @include transform(rotate(90deg) scaleX(0.75) translateY(0px));}
    to { @include transform(rotate(90deg) scaleX(0.75) translateY(0.3vw));}
}

.pyramid-gyro {
    position: absolute;
    top: 25%;
    left: 0px;
    margin-left: (-20 * $pyramid-size) - 0.2vw;

    -webkit-perspective: 1000px;
    -webkit-perspective-origin: 50% (100 * $pyramid-size);
    perspective: 1000px;
    perspective-origin: 50% (100 * $pyramid-size);

    @include animation(bobble 0.7s infinite ease-in-out alternate);

    .pyramid-axis {
        position: relative;
        width: (20 * $pyramid-size);
        
        -webkit-transform-style: preserve-3d;
        transform-style: preserve-3d;

        @include animation(spin 3s infinite linear);
    }

    .pyramid-wall {
        position: absolute;
        border: (10 * $pyramid-size) solid transparent;
    }

    .front {
        bottom: (-2 * $pyramid-size);
        border-bottom: (20 * $pyramid-size) solid rgba($pyramid-color, .5);
        @include transform(translateZ((2.5 * $pyramid-size)) rotateX(30deg));
    }
    .back {
        bottom: (-2 * $pyramid-size);
        border-bottom: (20 * $pyramid-size) solid rgba($pyramid-color, .5);
        @include transform(translateZ((-2.5 * $pyramid-size)) rotateY(180deg) rotateX(30deg));
    }
    .left {
        bottom: (-2 * $pyramid-size);
        left: (7.5 * $pyramid-size);
        border-bottom: (20 * $pyramid-size) solid rgba($pyramid-color, .5);
        @include transform(rotateY(270deg) translateX((-10 * $pyramid-size)) rotateX(30deg));

        -webkit-transform-origin: center left;
        transform-origin: center left;
    }
    .right {
        bottom: (-4 * $pyramid-size);
        right: (15 * $pyramid-size);
        border-bottom: (20 * $pyramid-size) solid rgba($pyramid-color, .5);
        @include transform(rotateY(-270deg) translateX((10 * $pyramid-size)) rotateX(30deg));

        -webkit-transform-origin: top right;
        transform-origin: top right;
    }
    .bottom {
        width: (20 * $pyramid-size);
        height: (20 * $pyramid-size);
        background: rgba($pyramid-color, .7);
        @include transform(rotateX(90deg) translateY((10 * $pyramid-size)));

        -webkit-transform-origin: bottom center;
        transform-origin: bottom center;
    }
}